#!/usr/bin/env bash

line_length=80
comment_symb="#"

repeat()
{
	local tmp=""
	for i in `seq ${1}`; do
		tmp="${tmp}${2}"
	done
	echo -n "${tmp}"
}

center()
{
	text="${@}"
	text_len=${#text}
	padding_left="$(repeat $(( (line_length - 2 - text_len ) / 2 )) " ")"
	padding_right="$(repeat $(( (line_length - 2 - text_len ) / 2 + (text_len & 1) )) " ")"
	printf "%s${padding_left}%s${padding_right}%s\n" "${comment_symb}" "${text}" "${comment_symb}"
}

blank_line()
{
	printf "${comment_symb}$(repeat $(( ${line_length}-2 )) " " )${comment_symb}\n"
}

strip_comment()
{
	if [ ${#@} -gt 0 ]; then
		while read -r line; do
			local stripped=$(echo "${line}" | sed -e 's/\#//g' | sed '/^\s$/d' | sed -e 's/^[ \t]*//')
			if [ ${#stripped} -gt 0 ]; then
				echo ${stripped}
			fi
		done <<< "${@}"
	fi
}

run()
{
	if [ ${#@} -gt 0 ]; then
		repeat ${line_length} ${comment_symb}; echo ""
		blank_line

		while read -r line; do
			center "${line}"
		done <<< "${@}"

		blank_line
		repeat ${line_length} ${comment_symb}; echo ""
	fi
}

STDIN=$(cat /dev/stdin)

if [[ "${1}" == "-s" ]]; then
	strip_comment "${STDIN}"
else
	run "$(strip_comment  "${STDIN}")" # <-- What are these quotes and why does this work?
	#run "${STDIN}"
fi

